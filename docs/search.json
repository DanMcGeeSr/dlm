[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A Bit of Probability",
    "section": "",
    "text": "I will attempt to keep the posts reasonably short and focused on a single topic.\n\n\n\n\n\n\n\n\n\n\nSimulating Some Problems in Probability\n\n\n\n\n\n\n\n\n\n\n\n\nJan 13, 2023\n\n\ndlm3\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "I use R for my analyses. I will usually include code used in the posts. The code is hidden. If you wish to see the code, click the “Show Code” and it will appear."
  },
  {
    "objectID": "posts/BirthDayProblem.html",
    "href": "posts/BirthDayProblem.html",
    "title": "Simulating Some Problems in Probability",
    "section": "",
    "text": "Simulation to establish probability is nothing new. Consider the flipping of a coin. Using the frequentist definition, we can say:\n\\(\\Pr(\\hbox{Heads}) = \\frac{1}{2}\\).\nBut is it really?\nOne way to find out would be to flip a coin a large of times, keeping track of whether each flip is heads or tails. After flipping the coin a lot of times we just calculate the proportion of times the flips resulted in heads: \\(\\Pr(\\hbox{Heads}) = \\frac{\\hbox{Number Heads}}{\\hbox{Number Flips}}\\). This experiment has often been conducted. The results obtained by some famous coin flippers are given in the following table.\n\n\nCode\nlibrary(tidyverse)\nlibrary(knitr)\nlibrary(kableExtra)\n\ndt1 <- tibble(Flipper = character(),\n              Flips = numeric(),\n              Heads = numeric())\n\ndt1[1,] <-  list(\"Count Buffon (1707-1788)\",4040,2048)\ndt1[2,] <-  list(\"Karl Pearson (1857–1936)\", 24000, 12012)\ndt1[3,] <-  list(\"John Kerrich (1903–1985)\", 10000, 5067)\n\n\n\ndt1  <-  dt1 %>% \n  mutate(Heads_pc = Heads/Flips)\n\nkbl(dt1, caption=\"Famous Coin Flippers\",align = \"c\") %>%\n  kable_classic(c(\"striped\", \"hover\"),full_width = F) %>% \n  footnote(general = \"Count Buffon was a French Naturalist and Mathematician.  Karl Pearson was a British Statistican.  Many statistical result carry his name. John Kerrich was a Danish Mathematician.  He conducted his experiment while interned by the nazis in WWII \")\n\n\n\n\nFamous Coin Flippers\n \n  \n    Flipper \n    Flips \n    Heads \n    Heads_pc \n  \n \n\n  \n    Count Buffon (1707-1788) \n    4040 \n    2048 \n    0.5069307 \n  \n  \n    Karl Pearson (1857–1936) \n    24000 \n    12012 \n    0.5005000 \n  \n  \n    John Kerrich (1903–1985) \n    10000 \n    5067 \n    0.5067000 \n  \n\n\nNote: \n\n Count Buffon was a French Naturalist and Mathematician.  Karl Pearson was a British Statistican.  Many statistical result carry his name. John Kerrich was a Danish Mathematician.  He conducted his experiment while interned by the nazis in WWII \n\n\n\n\n\nConducting such an experiment is rather tedious. Today most of us would flip the coin on a computer.\nAll simulation starts with a random number generator. Random number generators are a formula that given the present number calculates the next number in a sequence. This is a bit counter intuitive since formulas are deterministic not random. However, the numbers produced appear to have the properties of a random sequence of numbers. Hence, the generated sequences are technically called pseudo-random numbers. Often the pseudo is omitted when random number generators are discussed. The number that that starts the sequence is called the seed.\nIt is fairly easy to draw random samples in R. The sample function in R allows us to define the sample space \\(S\\) and draw random samples from it.\n\n\nCode\nlibrary(knitr)\n# specify the seed, i.e. starting point of the random sequence.\nset.seed(12348765)\n#   create the set to be randomly sampled.\nhead = c('Tails','Heads')\n# the default for the sample() function is sampling without replacement\nResult <- sample(head,10,replace=TRUE) \nResult\n\n\n [1] \"Tails\" \"Tails\" \"Heads\" \"Tails\" \"Tails\" \"Tails\" \"Heads\" \"Tails\" \"Heads\"\n[10] \"Tails\"\n\n\nNote that if I run that code again, I get a different series of outcomes.\n\n\nCode\nlibrary(knitr)\n\n#   create the set to be randomly sampled.\nhead = c('Tails','Heads')\n# the default for the sample() function is sampling without replacement\nResult <- sample(head,10,replace=TRUE) \nResult\n\n\n [1] \"Tails\" \"Heads\" \"Tails\" \"Heads\" \"Heads\" \"Tails\" \"Heads\" \"Heads\" \"Heads\"\n[10] \"Tails\"\n\n\nIf I run the code yet again, but set the seed to the same value as the first time, the same results are obtained.\n\n\nCode\nlibrary(knitr)\nset.seed(12348765)\n#   create a list of possible outcomes.\nhead = c('Tails','Heads')\n# the default for the sample() function is sampling without replacement\nResult <- sample(head,10,replace=TRUE)\nResult\n\n\n [1] \"Tails\" \"Tails\" \"Heads\" \"Tails\" \"Tails\" \"Tails\" \"Heads\" \"Tails\" \"Heads\"\n[10] \"Tails\"\n\n\nThis is why it is usually a good idea to set the seed. In that way, you can always reproduce the original simulation.\nSo, lets do some coin flipping. Lets examine the effect of sample size on our estimate by doing several simulations and varying the number of flips in each simulation.\n\n\nCode\nlibrary(tidyverse)\nlibrary(knitr)\noptions(scipen = 100, digits = 4)  #suppress scientific notation\nset.seed(87654)\nhead = c(0,1)  # 0 is tails, 1 is heads\nsampsize = c(1000,10000,100000,1000000,10000000)\ndf <- data.frame(Flips = double(), Results=numeric())\nfor (n in 1:5){\nt <- sample(head,sampsize[n],replace=TRUE) \ndf[n,]=c(format(sampsize[n],big.mark=\",\"),sum(t)/sampsize[n])\n}\nkable(df, format = \"html\", caption=\"Simulated Coin Flips\") %>%\n  kableExtra::kable_styling()\n\n\n\n\nSimulated Coin Flips\n \n  \n    Flips \n    Results \n  \n \n\n  \n    1,000 \n    0.505 \n  \n  \n    10,000 \n    0.501 \n  \n  \n    100,000 \n    0.49727 \n  \n  \n    1,000,000 \n    0.500232 \n  \n  \n    10,000,000 \n    0.4997701 \n  \n\n\n\n\n\n\ntitle: “The Birthdays Problem” author: “dlm1” date: “2023-01-14”\nHow many people have to be a room for the probability that at least two of them have the same birthday to be at least \\(\\frac{1}{2}\\)?\nAgain, for this problem the answer is non-intuitive. It only requires 23 people.\n\nFirst, let’s simulate the answer (23) to check that it’s true.\nTo do this, I simulate 10,000 random samples of size 23 from the 365 days in a year.\n\n\nCode\nset.seed(98767)\ndays <- 1:365  #ignores leap years\nsuccesses <- 0\nnumsamps <- 10000\nfor (i in 1:numsamps){\ns <- sample(days,23,replace = TRUE) # draw a sample of size 23\nn <- length(unique(s))\nsuccesses <- successes + (n != 23)\n}\nprint(paste0(\"Percent Success:  \",successes/numsamps*100,\"%\"))\n\n\n[1] \"Percent Success:  50.76%\"\n\n\nTo make sure this is the smallest number, simulate 22 as sample size.\n\n\nCode\nset.seed(4576)\ndays <- 1:365  #ignores leap years\nsuccesses <- 0\nnumsamps <- 10000\nfor (i in 1:numsamps){\ns <- sample(days,22,replace = TRUE) # draw a sample of size 23\nn <- length(unique(s))\nsuccesses <- successes + (n != 22)\n}\nprint(paste0(\"Percent Success:  \",successes/numsamps*100,\"%\"))\n\n\n[1] \"Percent Success:  47.53%\"\n\n\n\n\nNow the analytic solution.\nSuppose people k people are in a room what is the probability that at least two of them have the same birthday$?\nThis is a common case where it is easier to calculate the probability of the compliment of what we are looking for. That is we calculate: \\(\\Pr(\\hbox{All have different birthdays})\\), then\n\\(\\Pr(\\hbox{at least two have the same birthday})=1-Pr(\\hbox{All have different birthdays})\\).\nRecall: \\(\\Pr(\\hbox{All have different birthdays})=\\frac{\\hbox{number of ways all are different}}{\\hbox{ number of ways all have birthdays could occur}}\\)\nSuppose there are k people, then:\nnumber ways all have different birthdays \\(=365 \\times 364 \\times 363 \\times \\dots \\times (365-k+1)\\)\nand\nnumber of ways all birthdays could occur = \\(365^k\\)\nSo\n\\(\\Pr(\\hbox{All have different birthdays})=\\frac{365 \\times 364 \\times 363 \\times \\dots \\times (365-k+1)}{ 365^k}\\)\nand\n\\(\\Pr(\\hbox{At least two have the same birthday})=1- \\frac{365 \\times 364 \\times 363 \\times \\dots \\times (365-k+1)}{ 365^k}\\)\nThe following figure gives the results for 1 to 60 sample-size.\n\n\nCode\nlibrary(tidyverse)\nlibrary(highcharter)\ndf <- tibble(Number = numeric(), \n             Probability = numeric())\ndf[1,] = list(1,0)\nprobnone <- 1\nfor  (k in 1:60){\n  probnone=probnone*(365-(k-1))/365;\n  probmatch=1-probnone;\n  df[k,] = list(k, probmatch)\n}   \nhighchart(type = \"chart\") %>%\n  hc_add_series(data = df,\n                type = \"line\",\n                hcaes(x = Number,\n                      y = Probability)) %>% \n  hc_title(text = \"Probability that at least two people have the same birthday\") %>% \n  hc_xAxis(title = list(text = \"Number of People\")) %>%                        \n  hc_yAxis(title = list(text='Probability'))"
  },
  {
    "objectID": "posts/MonteHallProblem.html",
    "href": "posts/MonteHallProblem.html",
    "title": "Monte Hall Problem",
    "section": "",
    "text": "The Monte Hall Problem.\nThere are numerous versions of this problem. I use the version and solution presented by Steve Selvin in a letter to the American Statistician. The full letter can be viewed on JSTOR\nMonte Hall was the host of a television series called “Let’s Make a Deal”.\nIn the show Monte presents three boxes A, B, C. One holds the keys to a new car, the others are empty.\nA contestant selects a box, say A. Monte offers $100 cash for the box at which point the game would end. The participant refuses. Monte makes a couple more slightly larger cash offers that the contestant also refuses.\nMonte then opens one of the two remaining boxes. It is empty. So Monte points out that the chances are 50/50 that she has the box with the car keys and ups the ante offering the participant $1000. Which the contestant also refuses. At this point she has to decide whether she will keep the box she selected or with to the remain box that she didn’t pick. The question is which is the better strategy, to keep the chosen box or to switch. The answer is that switching is better.\nThe probability of winning is . This can be seen by enumerating the possible situations and the results (win or lose) for each. The following table was presented in the Selvin letter.\n\n\n\n\n\nKeys\n\n\nChooses\n\n\nShows\n\n\nSwitches\n\n\nResult\n\n\n\n\n\n\nA\n\n\nA\n\n\nB or C\n\n\nA for B or C\n\n\nLoses\n\n\n\n\nA\n\n\nB\n\n\nC\n\n\nB for A\n\n\nWins\n\n\n\n\nA\n\n\nC\n\n\nB\n\n\nC for A\n\n\nWins\n\n\n\n\nB\n\n\nA\n\n\nC\n\n\nA for C\n\n\nLoses\n\n\n\n\nB\n\n\nB\n\n\nA or C\n\n\nB for A or C\n\n\nLoses\n\n\n\n\nB\n\n\nC\n\n\nA\n\n\nB for A\n\n\nWins\n\n\n\n\nC\n\n\nA\n\n\nB\n\n\nB for C\n\n\nWins\n\n\n\n\nC\n\n\nB\n\n\nA\n\n\nB for C\n\n\nWins\n\n\n\n\nC\n\n\nC\n\n\nA or B\n\n\nC for A or B\n\n\nLoses\n\n\n\n\n\nThe correct answer is clear from this table. So, why simulate?\nMarilyn vos Savant gave the answer \\(\\frac{2}{3}\\) in her column “Ask Marilyn” in Parade magazine in 1990. The magazine received over 10,000 letters from readers. Many objected to the answer. The particulars on this column as well as some of the published responses can be obtained at this archive.\nPaul Erdős considered the most prolific mathematicians in history only became convinced after reviewing a simulation. So let’s do another.\nThe simulation is quite easy. The only time the contestant doesn’t win is when they choose correctly the first time.\nSo we do two simple steps.\n\nGenerate a random box for the keys\nGenerate a random box for the contestant’s first choice.\n\nIf the two are the same, the participant loses; otherwise the participant wins.\nNote: It should be clear based on Selvin’s table given above that if these are the same the contestant looses. Otherwise, they win.\n\n\nShow Code\nset.seed(46108)\nnumsim = 1000000\nwins <- 0\nS <- 1:3  # the sample space\nfor (i in 1:numsim){\nc1 <- sample(S,1)\nc2 <- sample(S,1)\nwins <- wins + (c1 != c2)\n}\n\nwins_pc <- wins/numsim*100\n\nprint(paste(\"Percentage Wins: \",wins_pc))\n\n\n[1] \"Percentage Wins:  66.6447\""
  }
]